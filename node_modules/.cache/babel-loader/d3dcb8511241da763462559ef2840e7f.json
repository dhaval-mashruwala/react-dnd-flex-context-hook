{"ast":null,"code":"import { fetchTweets as fetchTweetsApi, fetchBackupTweets } from '../api';\nexport const actions = {\n  FETCH_TWEETS_SUCCESS: 'FETCH_TWEETS_SUCCESS',\n  FETCH_TWEETS_ERROR: 'FETCH_TWEETS_ERROR',\n  SET_SAVED_TWEET: 'SET_SAVED_TWEET',\n  REMOVE_SAVED_TWEET: 'REMOVE_SAVED_TWEET'\n};\nexport const fetchTweets = dispatch => {\n  return async query => {\n    try {\n      const res = await fetchTweetsApi(query, 10);\n      dispatch({\n        type: actions.FETCH_TWEETS_SUCCESS,\n        data: res.data\n      });\n    } catch (e) {\n      /* rest api is giving CORS error hence this is backup response if it gives CORS error */\n      try {\n        const res = await fetchBackupTweets();\n        dispatch({\n          type: actions.FETCH_TWEETS_SUCCESS,\n          data: res.data\n        });\n      } catch (e) {\n        dispatch({\n          type: actions.FETCH_TWEETS_ERROR,\n          error: e.toString()\n        });\n      }\n    }\n  };\n};\nexport const setSavedTweets = dispatch => {\n  return draggedTweet => {\n    try {\n      dispatch({\n        type: actions.SET_SAVED_TWEET,\n        data: draggedTweet\n      });\n    } catch (e) {\n      throw e;\n    }\n  };\n};\nexport const removeSavedTweet = dispatch => {\n  return tweetIndex => {\n    try {\n      dispatch({\n        type: actions.REMOVE_SAVED_TWEET,\n        data: tweetIndex\n      });\n    } catch (e) {\n      throw e;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/dhavalmashruwala/me/sample/react-dnd-flex-context-hook/src/actions/index.js"],"names":["fetchTweets","fetchTweetsApi","fetchBackupTweets","actions","FETCH_TWEETS_SUCCESS","FETCH_TWEETS_ERROR","SET_SAVED_TWEET","REMOVE_SAVED_TWEET","dispatch","query","res","type","data","e","error","toString","setSavedTweets","draggedTweet","removeSavedTweet","tweetIndex"],"mappings":"AAAA,SAAQA,WAAW,IAAIC,cAAvB,EAAuCC,iBAAvC,QAA+D,QAA/D;AAEA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,oBAAoB,EAAE,sBADD;AAErBC,EAAAA,kBAAkB,EAAE,oBAFC;AAGrBC,EAAAA,eAAe,EAAE,iBAHI;AAIrBC,EAAAA,kBAAkB,EAAE;AAJC,CAAhB;AAOP,OAAO,MAAMP,WAAW,GAAIQ,QAAD,IAAc;AACvC,SAAO,MAAMC,KAAN,IAAe;AACpB,QAAG;AACD,YAAMC,GAAG,GAAG,MAAMT,cAAc,CAACQ,KAAD,EAAQ,EAAR,CAAhC;AACAD,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAER,OAAO,CAACC,oBADP;AAEPQ,QAAAA,IAAI,EAACF,GAAG,CAACE;AAFF,OAAD,CAAR;AAKD,KAPD,CAOE,OAAMC,CAAN,EAAQ;AACR;AACA,UAAI;AACF,cAAMH,GAAG,GAAG,MAAMR,iBAAiB,EAAnC;AACAM,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAER,OAAO,CAACC,oBADP;AAEPQ,UAAAA,IAAI,EAACF,GAAG,CAACE;AAFF,SAAD,CAAR;AAID,OAND,CAME,OAAMC,CAAN,EAAS;AACTL,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAER,OAAO,CAACE,kBADP;AAEPS,UAAAA,KAAK,EAACD,CAAC,CAACE,QAAF;AAFC,SAAD,CAAR;AAKD;AACF;AACF,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMC,cAAc,GAAIR,QAAD,IAAc;AAC1C,SAAOS,YAAY,IAAI;AACrB,QAAG;AACDT,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAER,OAAO,CAACG,eADP;AAEPM,QAAAA,IAAI,EAACK;AAFE,OAAD,CAAR;AAKD,KAND,CAME,OAAMJ,CAAN,EAAQ;AACR,YAAMA,CAAN;AACD;AACF,GAVD;AAWD,CAZM;AAaP,OAAO,MAAMK,gBAAgB,GAAIV,QAAD,IAAc;AAC5C,SAAOW,UAAU,IAAI;AACnB,QAAG;AACDX,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAER,OAAO,CAACI,kBADP;AAEPK,QAAAA,IAAI,EAACO;AAFE,OAAD,CAAR;AAKD,KAND,CAME,OAAMN,CAAN,EAAQ;AACR,YAAMA,CAAN;AACD;AACF,GAVD;AAWD,CAZM","sourcesContent":["import {fetchTweets as fetchTweetsApi, fetchBackupTweets} from '../api'\n\nexport const actions = {\n  FETCH_TWEETS_SUCCESS: 'FETCH_TWEETS_SUCCESS',\n  FETCH_TWEETS_ERROR: 'FETCH_TWEETS_ERROR',\n  SET_SAVED_TWEET: 'SET_SAVED_TWEET',\n  REMOVE_SAVED_TWEET: 'REMOVE_SAVED_TWEET'\n}\n\nexport const fetchTweets = (dispatch) => {\n  return async query => {\n    try{\n      const res = await fetchTweetsApi(query, 10);\n      dispatch({\n        type: actions.FETCH_TWEETS_SUCCESS,\n        data:res.data\n      });\n\n    } catch(e){\n      /* rest api is giving CORS error hence this is backup response if it gives CORS error */\n      try {\n        const res = await fetchBackupTweets();\n        dispatch({\n          type: actions.FETCH_TWEETS_SUCCESS,\n          data:res.data\n        });\n      } catch(e) {\n        dispatch({\n          type: actions.FETCH_TWEETS_ERROR,\n          error:e.toString()\n        });\n  \n      }\n    }\n  }\n}\n\nexport const setSavedTweets = (dispatch) => {\n  return draggedTweet => {\n    try{\n      dispatch({\n        type: actions.SET_SAVED_TWEET,\n        data:draggedTweet\n      });\n\n    } catch(e){\n      throw e;\n    }\n  }\n}\nexport const removeSavedTweet = (dispatch) => {\n  return tweetIndex => {\n    try{\n      dispatch({\n        type: actions.REMOVE_SAVED_TWEET,\n        data:tweetIndex\n      });\n\n    } catch(e){\n      throw e;\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}