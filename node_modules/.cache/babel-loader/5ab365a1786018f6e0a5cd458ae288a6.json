{"ast":null,"code":"import { actions } from '../actions';\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actions.FETCH_TWEETS_SUCCESS:\n      return { ...state,\n        tweets: action.data && action.data.tweets\n      };\n\n    case actions.FETCH_TWEETS_ERROR:\n      return { ...state,\n        error: action.error\n      };\n\n    case actions.SET_SAVED_TWEET:\n      {\n        let savedTweets = [...state.savedTweets];\n        const savedTweetsIds = savedTweets.map(tweet => tweet.id);\n\n        if (savedTweetsIds.indexOf(action.data.id)) {\n          savedTweets.push(action.data);\n        }\n\n        return { ...state,\n          savedTweets\n        };\n      }\n\n    case actions.REMOVE_SAVED_TWEET:\n      {\n        let savedTweets = [...state.savedTweets];\n        savedTweets.splice(action.data, 1);\n        return { ...state,\n          savedTweets\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/dhavalmashruwala/me/sample/react-dnd-flex-context-hook/src/reducers/index.js"],"names":["actions","reducer","state","action","type","FETCH_TWEETS_SUCCESS","tweets","data","FETCH_TWEETS_ERROR","error","SET_SAVED_TWEET","savedTweets","savedTweetsIds","map","tweet","id","indexOf","push","REMOVE_SAVED_TWEET","splice"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,OAAO,CAACK,oBAAb;AACA,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,MAAM,EAAEH,MAAM,CAACI,IAAP,IAAeJ,MAAM,CAACI,IAAP,CAAYD;AAF9B,OAAP;;AAKA,SAAKN,OAAO,CAACQ,kBAAb;AACA,aAAO,EACL,GAAGN,KADE;AAELO,QAAAA,KAAK,EAAEN,MAAM,CAACM;AAFT,OAAP;;AAIA,SAAKT,OAAO,CAACU,eAAb;AACF;AACE,YAAIC,WAAW,GAAG,CAAC,GAAGT,KAAK,CAACS,WAAV,CAAlB;AACA,cAAMC,cAAc,GAAGD,WAAW,CAACE,GAAZ,CAAiBC,KAAD,IAAUA,KAAK,CAACC,EAAhC,CAAvB;;AAEA,YAAIH,cAAc,CAACI,OAAf,CAAuBb,MAAM,CAACI,IAAP,CAAYQ,EAAnC,CAAJ,EAA6C;AACzCJ,UAAAA,WAAW,CAACM,IAAZ,CAAiBd,MAAM,CAACI,IAAxB;AACH;;AACD,eAAO,EACL,GAAGL,KADE;AAELS,UAAAA;AAFK,SAAP;AAID;;AACC,SAAKX,OAAO,CAACkB,kBAAb;AAEA;AACE,YAAIP,WAAW,GAAG,CAAC,GAAGT,KAAK,CAACS,WAAV,CAAlB;AACFA,QAAAA,WAAW,CAACQ,MAAZ,CAAmBhB,MAAM,CAACI,IAA1B,EAAgC,CAAhC;AACA,eAAO,EACL,GAAGL,KADE;AAELS,UAAAA;AAFK,SAAP;AAID;;AACC;AACA,aAAOT,KAAP;AApCF;AAsCD","sourcesContent":["import { actions } from '../actions';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actions.FETCH_TWEETS_SUCCESS:\n    return {\n      ...state,\n      tweets: action.data && action.data.tweets\n    };\n\n    case actions.FETCH_TWEETS_ERROR:\n    return {\n      ...state,\n      error: action.error\n    }\n    case actions.SET_SAVED_TWEET:\n  {    \n    let savedTweets = [...state.savedTweets];\n    const savedTweetsIds = savedTweets.map((tweet)=>(tweet.id));\n\n    if( savedTweetsIds.indexOf(action.data.id) ) {\n        savedTweets.push(action.data);\n    }\n    return {\n      ...state,\n      savedTweets\n    };\n  }\n    case actions.REMOVE_SAVED_TWEET:\n    \n    {\n      let savedTweets = [...state.savedTweets];\n    savedTweets.splice(action.data, 1);\n    return {\n      ...state,\n      savedTweets\n    };\n  }\n    default:\n    return state;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}